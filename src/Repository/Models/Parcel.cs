// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using MetroShip.Repository.Models.Base;
using MetroShip.Utility.Enums;
using Microsoft.EntityFrameworkCore;

namespace MetroShip.Repository.Models;

[Index("ParcelCode", Name = "UQ__ParcelCode__A2A2A54B1E001898", IsUnique = true)]
public partial class Parcel : BaseEntity
{
    public Parcel()
    {
        ParcelStatus = ParcelStatusEnum.AwaitingConfirmation;
    }

    [Required]
    [StringLength(50)]
    public string ParcelCode { get; set; }

    [Required]
    [StringLength(50)]
    public string ShipmentId { get; set; }

    [Required]
    [StringLength(50)]
    public string ParcelCategoryId { get; set; }

    [Required]
    public ParcelStatusEnum ParcelStatus { get; set; }

    [Column(TypeName = "decimal(10, 2)")]
    public decimal WeightKg { get; set; }

    [Column(TypeName = "decimal(10, 2)")]
    public decimal VolumeCm3 => LengthCm * WidthCm * HeightCm;

    [Column(TypeName = "decimal(10, 2)")]
    public decimal LengthCm { get; set; }
    [Column(TypeName = "decimal(10, 2)")]
    public decimal WidthCm { get; set; }
    [Column(TypeName = "decimal(10, 2)")]
    public decimal HeightCm { get; set; }

    public bool IsBulk { get; set; }

    public int? IATACoefficient => IsBulk ? 6000 : 5000;

    [Column(TypeName = "decimal(10, 2)")]
    public decimal ChargeableWeightKg => Math.Max(WeightKg, VolumeCm3 / 5000);
    public string Barcode { get; set; }
    public string QrCode { get; set; }

    [Column(TypeName = "decimal(18, 2)")]
    public decimal PriceVnd { get; set; }

    [StringLength(255)]
    public string Description { get; set; }

    [ForeignKey(nameof(ShipmentId))]
    [InverseProperty(nameof(Shipment.Parcels))]
    public virtual Shipment Shipment { get; set; }

    [ForeignKey(nameof(ParcelCategoryId))]
    [InverseProperty(nameof(ParcelCategory.Parcels))]
    public virtual ParcelCategory ParcelCategory { get; set; }

    [InverseProperty(nameof(ParcelTracking.Parcel))]
    public virtual ICollection<ParcelTracking> ParcelTrackings { get; set; } = new List<ParcelTracking>();
}