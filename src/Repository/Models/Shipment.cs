// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using MetroShip.Repository.Models.Base;
using MetroShip.Repository.Models.Identity;
using MetroShip.Utility.Enums;
using Microsoft.EntityFrameworkCore;

namespace MetroShip.Repository.Models;

[Index("TrackingCode", Name = "UQ__Shipment__A2A2A54B59D458B2", IsUnique = true)]
public partial class Shipment : BaseEntity
{
    public Shipment()
    {
        TrackingCode = this.GetType().Name.ToUpperInvariant();
        ShipmentStatus = ShipmentStatusEnum.Processing;
    }

    [Required]
    [StringLength(50)]
    public string TrackingCode { get; set; }

    [Required]
    [StringLength(50)]
    public string DepartureStationId { get; set; }

    [Required]
    [StringLength(50)]
    public string DestinationStationId { get; set; }

    public ShipmentStatusEnum ShipmentStatus { get; set; }

    [Column(TypeName = "decimal(18, 2)")]
    public decimal TotalCostVnd { get; set; } 

    [Column(TypeName = "decimal(18, 2)")]
    public decimal ShippingFeeVnd { get; set; }

    [Column(TypeName = "decimal(18, 2)")]
    public decimal? InsuranceFeeVnd { get; set; }

    [Column(TypeName = "decimal(18, 2)")]
    public decimal? SurchargeFeeVnd { get; set; }

    public DateTimeOffset? ScheduledDateTime { get; set; }

    public DateTimeOffset? BookedAt { get; set; }

    public DateTimeOffset? ApprovedAt { get; set; }

    public DateTimeOffset? PaidAt { get; set; }

    public DateTimeOffset? PickupAt { get; set; }

    public DateTimeOffset? DeliveredAt { get; set; }

    public DateTimeOffset? SurchargeAppliedAt { get; set; }

    public DateTimeOffset? CancelledAt { get; set; }

    public DateTimeOffset? RefundedAt { get; set; }

    // Customer fields
    [Required]
    [StringLength(50)]
    public string SenderId { get; set; }

    [Required]
    [StringLength(100)]
    public string SenderName { get; set; }

    [Required]
    [StringLength(20)]
    public string SenderPhone { get; set; }

    [StringLength(50)]
    public string? RecipientId { get; set; }

    [Required]
    [StringLength(100)]
    public string RecipientName { get; set; }

    [Required]
    [StringLength(20)]
    public string RecipientPhone { get; set; }

    [StringLength(255)]
    public string? RecipientEmail { get; set; }

    [Required]
    [StringLength(20)]
    public string RecipientNationalId { get; set; }

    [ForeignKey(nameof(SenderId))]
    [InverseProperty(nameof(UserEntity.Shipments))]
    public virtual UserEntity Sender { get; set; }

    [InverseProperty(nameof(Parcel.Shipment))]
    public virtual ICollection<Parcel> Parcels { get; set; } = new List<Parcel>();

    [InverseProperty(nameof(ShipmentItinerary.Shipment))]
    public virtual ICollection<ShipmentItinerary> ShipmentItineraries { get; set; } = new List<ShipmentItinerary>();

    [InverseProperty(nameof(SupportingTicket.Shipment))]
    public virtual ICollection<SupportingTicket> SupportingTickets { get; set; } = new List<SupportingTicket>();
}