// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using MetroShip.Repository.Models.Base;
using MetroShip.Repository.Models.Identity;
using MetroShip.Utility.Enums;
using MetroShip.Utility.Helpers;
using Microsoft.EntityFrameworkCore;

namespace MetroShip.Repository.Models;

[Index("TrackingCode", IsUnique = true)]
public partial class Shipment : BaseEntity
{
    public Shipment()
    {
        BookedAt = CoreHelper.SystemTimeNow;
        ShipmentStatus = ShipmentStatusEnum.AwaitingConfirmation;
    }

    [Required]
    [StringLength(50)]
    public string TrackingCode { get; set; }

    [Required]
    [StringLength(50)]
    public string DepartureStationId { get; set; }

    [Required]
    [StringLength(50)]
    public string DestinationStationId { get; set; }

    [StringLength(50)]
    public string? ReturnForShipmentId { get; set; } // Nullable, if not return shipment

    public ShipmentStatusEnum ShipmentStatus { get; set; }

    [Column(TypeName = "decimal(18, 2)")]
    public decimal TotalCostVnd { get; set; } 

    [Column(TypeName = "decimal(18, 2)")]
    public decimal TotalShippingFeeVnd { get; set; }

    [Column(TypeName = "decimal(18, 2)")]
    public decimal? TotalInsuranceFeeVnd { get; set; } = 0;

    [Column(TypeName = "decimal(18, 2)")]
    public decimal? TotalSurchargeFeeVnd { get; set; }

    [Column(TypeName = "decimal(18, 2)")]
    public decimal? TotalOverdueSurchargeFee { get; set; }

    [Column(TypeName = "decimal(8, 2)")]
    public decimal? TotalKm { get; set; }

    [Column(TypeName = "decimal(10, 2)")]
    public decimal? TotalWeightKg { get; set; }

    [Column(TypeName = "decimal(10, 2)")]
    public decimal? TotalVolumeM3 { get; set; }

    [StringLength(50)]
    public string? TimeSlotId { get; set; }
    public DateTimeOffset? ScheduledDateTime { get; set; } 
    public ShiftEnum? ScheduledShift { get; set; }
    public string? PriceStructureDescriptionJSON { get; set; }

    public DateTimeOffset? BookedAt { get; set; }
    public DateTimeOffset? ApprovedAt { get; set; }
    public DateTimeOffset? RejectedAt { get; set; }
    public string? ConfirmedBy { get; set; }
    public DateTimeOffset? PaidAt { get; set; }
    public DateTimeOffset? PickedUpAt { get; set; }
    public DateTimeOffset? AwaitedDeliveryAt { get; set; }
    public DateTimeOffset? DeliveredAt { get; set; }
    public DateTimeOffset? SurchargeAppliedAt { get; set; }
    public DateTimeOffset? CancelledAt { get; set; }
    public DateTimeOffset? RefundedAt { get; set; }
    public DateTimeOffset? ReturnRequestedAt { get; set; }
    public DateTimeOffset? ReturnConfirmedAt { get; set; }
    public string? ReturnReason { get; set; } // Reason for return, if applicable
    public string? ReturnConfirmedBy { get; set; }
    public DateTimeOffset? ReturnPickupAt { get; set; }
    public DateTimeOffset? ReturnDeliveredAt { get; set; }
    public DateTimeOffset? ReturnCancelledAt { get; set; }

    // Customer fields
    [Required]
    [StringLength(50)]
    public string SenderId { get; set; }

    [Required]
    [StringLength(100)]
    public string SenderName { get; set; }

    [Required]
    [StringLength(20)]
    public string SenderPhone { get; set; }

    [StringLength(50)]
    public string? RecipientId { get; set; }

    [Required]
    [StringLength(100)]
    public string RecipientName { get; set; }

    [Required]
    [StringLength(20)]
    public string RecipientPhone { get; set; }

    [StringLength(255)]
    public string? RecipientEmail { get; set; }

    [StringLength(20)]
    public string? RecipientNationalId { get; set; }

    public string? PickedUpPicture { get; set; } // URL to the picture taken at pickup
    public string? DeliveredPicture { get; set; } // URL to the picture taken at delivery
    public byte? Rating { get; set; } // Rating given by the customer, if applicable

    [StringLength(500)]
    public string? Feedback { get; set; } // Feedback or comments from the customer

    [ForeignKey(nameof(SenderId))]
    [InverseProperty(nameof(UserEntity.Shipments))]
    public virtual UserEntity Sender { get; set; }

    [InverseProperty(nameof(Parcel.Shipment))]
    public virtual ICollection<Parcel> Parcels { get; set; } = new List<Parcel>();

    [InverseProperty(nameof(ShipmentItinerary.Shipment))]
    public virtual ICollection<ShipmentItinerary> ShipmentItineraries { get; set; } = new List<ShipmentItinerary>();

    [InverseProperty(nameof(SupportingTicket.Shipment))]
    public virtual ICollection<SupportingTicket> SupportingTickets { get; set; } = new List<SupportingTicket>();

    [InverseProperty(nameof(Transaction.Shipment))]
    public virtual ICollection<Transaction> Transactions { get; set; } = new List<Transaction>();

    [ForeignKey(nameof(ReturnForShipmentId))]
    public virtual Shipment? ReturnForShipment { get; set; }
}