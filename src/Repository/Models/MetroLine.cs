// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using MetroShip.Repository.Models.Base;
using Microsoft.EntityFrameworkCore;

namespace MetroShip.Repository.Models;

public partial class MetroLine : BaseEntity
{
    public MetroLine()
    {
        LineCode = this.GetType().Name.ToUpperInvariant();
    }

    [Required]
    [StringLength(50)]
    public string RegionId { get; set; }

    [Required]
    [StringLength(255)]
    public string LineNameVi { get; set; }

    [Required]
    [StringLength(255)]
    public string LineNameEn { get; set; }

    [StringLength(20)]
    public string LineCode { get; set; }

    [StringLength(255)]
    public string? LineType { get; set; }

    [StringLength(255)]
    public string? LineOwner { get; set; }

    [Column(TypeName = "decimal(8, 2)")]
    public decimal TotalKm { get; set; }

    public int TotalStations { get; set; }

    // This property is used to calculate est time
    public int? MinHeadwayMin { get; set; }

    // This property is used to calculate timeline
    public int? MaxHeadwayMin { get; set; }

    public int? RouteTimeMin { get; set; }

    public int? DwellTimeMin { get; set; }

    public int? TopSpeedKmH { get; set; }

    public int? TopSpeedUdgKmH { get; set; }

    // Toa
    public int? CarriagesPerTrain { get; set; }

    [Column(TypeName = "decimal(10, 2)")]
    public decimal? CarriageLenghtMeter { get; set; }

    [Column(TypeName = "decimal(10, 2)")]
    public decimal? CarriageWidthMeter { get; set; }

    [Column(TypeName = "decimal(10, 2)")]
    public decimal? CarriageHeightMeter { get; set; }

    // Khối lượng tải
    [Column(TypeName = "decimal(10, 2)")]
    public decimal? CarriageWeightTons { get; set; }

    // Thể tích tải
    [Column(TypeName = "decimal(10, 2)")]
    public decimal? CarriageVolumeM3 => CarriageLenghtMeter * CarriageWidthMeter * CarriageHeightMeter;

    [Column(TypeName = "decimal(18, 2)")]
    public decimal? BasePriceVndPerKm { get; set; }

    [StringLength(20)]
    public string ColorHex { get; set; }

    public bool IsActive { get; set; }

    [ForeignKey(nameof(RegionId))]
    [InverseProperty(nameof(Region.MetroLines))]
    public virtual Region Region { get; set; }

    [InverseProperty(nameof(Route.MetroLine))]
    public virtual ICollection<Route> Routes { get; set; } = new List<Route>();

    public virtual ICollection<MetroTimeSlot> MetroSchedules { get; set; } = new List<MetroTimeSlot>();
}